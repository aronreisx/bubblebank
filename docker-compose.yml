services:
  db:
    image: ${DB_IMAGE}:${DB_VERSION}
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - ./volumes/postgres-data:/var/lib/postgresql/data

  bubblebank:
    image: ${CONTAINER_REGISTRY}/${PROJECT_NAME}:latest
    environment:
      DB_IMAGE: ${DB_IMAGE}
      DB_VERSION: ${DB_VERSION}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
      DB_HOST: db
      SERVER_PORT: ${SERVER_PORT}
      # OpenTelemetry Configuration
      OTEL_SERVICE_NAME: bubblebank
      OTEL_SERVICE_VERSION: ${VERSION:-latest}
      OTEL_ENVIRONMENT: ${ENVIRONMENT:-development}
      OTEL_EXPORTER_OTLP_ENDPOINT: http://tempo:4318
      PROMETHEUS_ENDPOINT: http://prometheus:9090
      METRICS_PORT: "9464"
      LOG_LEVEL: info
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
      - "9464:9464"  # Metrics endpoint
    depends_on:
      - db
      - tempo
      - prometheus

  # Observability Stack
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  loki:
    image: grafana/loki:2.9.2
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./docker/loki.yml:/etc/loki/local-config.yaml
      - loki-data:/loki
    command: -config.file=/etc/loki/local-config.yaml

  tempo:
    image: grafana/tempo:2.3.0
    container_name: tempo
    ports:
      - "3200:3200"   # Tempo HTTP
      - "4317:4317"   # OTLP gRPC
      - "4318:4318"   # OTLP HTTP
    volumes:
      - ./docker/tempo.yml:/etc/tempo.yaml
      - tempo-data:/tmp/tempo
    command: -config.file=/etc/tempo.yaml

  grafana:
    image: grafana/grafana:10.2.0
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
      - ./docker/grafana/dashboards:/var/lib/grafana/dashboards
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
      - loki
      - tempo

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      - db

volumes:
  postgres-data:
  prometheus-data:
  loki-data:
  tempo-data:
  grafana-data:
